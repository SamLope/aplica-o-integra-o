name: CI Pipeline

on:
  push:
    branches:
      - master  # Aciona o workflow quando houver um push para a branch "master"
  pull_request:
    branches:
      - master  # Aciona o workflow também para pull requests para a branch "master"

jobs:
  build:
    runs-on: ubuntu-latest  # Ambiente de execução do GitHub Actions
    
    steps:
    # Checkout do código do repositório
    - name: Checkout code
      uses: actions/checkout@v2  # Faz checkout do código

    # Login no DockerHub com as credenciais armazenadas como secrets no GitHub
    - name: Docker Login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build da imagem Docker
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/minha-api-node:latest .

    # Push da imagem para o DockerHub
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/minha-api-node:latest

    # Adiciona a chave SSH para acesso ao servidor remoto
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}  # Chave privada SSH armazenada nos Secrets do GitHub

    # Deploy no servidor remoto
    - name: Deploy on remote server
      run: |
        ssh -o StrictHostKeyChecking=no aluno@201.23.3.86 "
          docker pull ${{ secrets.DOCKER_USERNAME }}/minha-api-node:latest &&  # Puxa a última versão da imagem
          docker stop minha-api-node || true &&  # Para o container se estiver rodando
          docker rm minha-api-node || true &&  # Remove o container antigo
          docker run -d -p 8103:8103 --name minha-api-node ${{ secrets.DOCKER_USERNAME }}/minha-api-node:latest  # Roda o novo container na porta 8103
        "
